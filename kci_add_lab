#!/usr/bin/env python3
#
# Copyright (C) 2017 Linaro Limited
# Author: Matt Hart <matthew.hart@linaro.org>
#
# Copyright (C) 2017, 2018 Collabora Ltd
# Author: Guillaume Tucker <guillaume.tucker@collabora.com>
#
# This module is free software; you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; either version 2.1 of the License, or (at your option)
# any later version.
#
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

"""Create a new lab entry."""

import argparse
import json
import urllib.parse
import requests
import sys

try:
    from _settings import HOSTS
except ImportError:
    print("Warning: no local _settings module found")
    from _sample_settings import HOSTS


def add_lab(args):
    host = HOSTS[args.host]

    headers = {
        "Authorization": host['token'],
        "Content-Type": "application/json"
    }

    payload = {
        "name": args.name,
        "contact": {
            "name": args.first_name,
            "surname": args.last_name,
            "email": args.email,
        }
    }

    url = urllib.parse.urljoin(host['url'], "/lab")

    # ToDo: reuse to create tokens
    # url = urlparse.urljoin(host['url'], "/token")

    if args.dry:
        print("Dry run - not sending any request")
        print(headers)
        print(payload)
        return

    response = requests.post(url, data=json.dumps(payload), headers=headers)

    print("Response:")
    print(response.content)


def main(argv):
    parser = argparse.ArgumentParser(description="Create a lab entry")
    parser.add_argument('name',
                        help="Name of the lab i.e. lab-something")
    parser.add_argument('--first-name', required=True,
                        help="First name of the contact person")
    parser.add_argument('--last-name', required=True,
                        help="Last name of the contact person")
    parser.add_argument('--email', required=True,
                        help="Email address of the contact person")
    parser.add_argument('--host', required=True, choices=HOSTS.keys(),
                        help="Hostname of the API server")
    parser.add_argument('--dry', action='store_true',
                        help="Dry run, do not send any request")
    args = parser.parse_args(argv)

    add_lab(args)


if __name__ == "__main__":
    main(sys.argv[1:])
