#!/usr/bin/env python3
#
# Copyright (C) 2017 Linaro Limited
# Author: Matt Hart <matthew.hart@linaro.org>
#
# Copyright (C) 2017, 2018 Collabora Ltd
# Author: Guillaume Tucker <guillaume.tucker@collabora.com>
#
# This module is free software; you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; either version 2.1 of the License, or (at your option)
# any later version.
#
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

"""Create a new lab entry."""

import argparse
import requests
import sys

from kci_admin import HOSTS, add_lab_request


def main(argv):
    parser = argparse.ArgumentParser(description="Create a lab entry")
    parser.add_argument('--lab-name', required=True,
                        help="Name of the lab i.e. lab-something")
    parser.add_argument('--first-name', required=True,
                        help="First name of the contact person")
    parser.add_argument('--last-name', required=True,
                        help="Last name of the contact person")
    parser.add_argument('--email', required=True,
                        help="Email address of the contact person")
    parser.add_argument('--host', required=True, choices=HOSTS.keys(),
                        help="Hostname of the API server")
    parser.add_argument('--dry', action='store_true',
                        help="Dry run, do not send any request")
    args = parser.parse_args(argv)

    opts = {o: getattr(args, o) for o in
            ['lab_name', 'first_name', 'last_name', 'email']}
    url, payload, headers = add_lab_request(args.host, opts)

    if args.dry:
        print("Dry run - not sending any request")
        print("URL: {}".format(url))
        print(headers)
        print(payload)
    else:
        response = requests.post(url, data=payload, headers=headers)
        print("Response:")
        print(response.content)


if __name__ == "__main__":
    main(sys.argv[1:])
